/*
 * Copyright (c) 2018.
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import java.io.File;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.util.ArrayList;
import java.util.Arrays;

public class AppMainWindow extends JFrame {

    private JPanel mainPanel;
    private JTable fileTable;
    private JButton addFileButton;
    private JButton removeFileButton;
    private JSlider scaleSlider;
    private JLabel scaleLabel;
    private JRadioButton jpgRadioButton;
    private JRadioButton pngRadioButton;
    private JRadioButton bmpRadioButton;
    private JPanel fileTypePanel;
    private JButton startConvertButton;
    private JProgressBar progressBar;
    private JLabel filesCounterLabel;
    private ImagePanel previewPanel;
    private JFileChooser fileChooser;
    private Resizer resizer;
    private ButtonGroup exportTypeButtonGroup;


    public AppMainWindow(String windowName) {
        super(windowName);
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
        getContentPane().add(mainPanel);

        scaleSlider.addChangeListener(changeEvent -> scaleLabel.setText(scaleSlider.getValue() + " %"));

        fileTable.setModel(new FileTableModel());

        resizer = new Resizer();

        addFileButton.addActionListener(actionEvent -> {
            if (fileChooser == null) {
                fileChooser = new JFileChooser();
            }
            fileChooser.setMultiSelectionEnabled(true);
            fileChooser.setFileFilter(new FileNameExtensionFilter("Pliki obrazów", "bmp", "jpgRadioButton", "png", "jpeg"));

            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                resizer.addFilesToConvert(Arrays.asList(fileChooser.getSelectedFiles()));
                fileTable.setModel(new FileTableModel(resizer.getFiles()));
                filesCounterLabel.setText(String.format("%d plików", fileTable.getRowCount()));
            }
        });

        removeFileButton.addActionListener(actionEvent -> {
            int[] fileIDs = fileTable.getSelectedRows();
            ArrayList<File> filesToRemove = new ArrayList<>();
            for (int id : fileIDs) {
                filesToRemove.add(resizer.getFiles().get(id));
            }
            resizer.removeFiles(filesToRemove);

            fileTable.setModel(new FileTableModel(resizer.getFiles()));
            filesCounterLabel.setText(String.format("%d plików", fileTable.getRowCount()));

        });

        fileTable.getSelectionModel().addListSelectionListener(listSelectionEvent -> {
            int selectedRow = fileTable.getSelectedRow();
            if (selectedRow > -1)
                previewPanel.setImage(resizer.getFiles().get(selectedRow));
        });
        exportTypeButtonGroup = new ButtonGroup();
        exportTypeButtonGroup.add(jpgRadioButton);
        exportTypeButtonGroup.add(pngRadioButton);
        exportTypeButtonGroup.add(bmpRadioButton);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 2, new Insets(5, 5, 5, 5), -1, -1));
        mainPanel.add(panel1, BorderLayout.CENTER);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        addFileButton = new JButton();
        addFileButton.setText("Dodaj");
        panel2.add(addFileButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        removeFileButton = new JButton();
        removeFileButton.setText("Usuń");
        panel2.add(removeFileButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        fileTable = new JTable();
        fileTable.setFillsViewportHeight(true);
        fileTable.setShowHorizontalLines(true);
        fileTable.setShowVerticalLines(true);
        fileTable.setUpdateSelectionOnSort(false);
        scrollPane1.setViewportView(fileTable);
        filesCounterLabel = new JLabel();
        filesCounterLabel.setText("0 plików");
        panel1.add(filesCounterLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(5, 1, new Insets(5, 5, 5, 5), -1, -1));
        mainPanel.add(panel3, BorderLayout.EAST);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel3.add(panel4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(200, 200), null, null, 0, false));
        panel4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Podgląd"));
        panel4.add(previewPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(300, 300), null, null, 0, false));
        fileTypePanel = new JPanel();
        fileTypePanel.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel3.add(fileTypePanel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        fileTypePanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Typ pliku"));
        jpgRadioButton = new JRadioButton();
        jpgRadioButton.setSelected(true);
        jpgRadioButton.setText("jpg");
        fileTypePanel.add(jpgRadioButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pngRadioButton = new JRadioButton();
        pngRadioButton.setText("png");
        fileTypePanel.add(pngRadioButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bmpRadioButton = new JRadioButton();
        bmpRadioButton.setText("bmp");
        fileTypePanel.add(bmpRadioButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        startConvertButton = new JButton();
        startConvertButton.setText("Konwertuj");
        panel3.add(startConvertButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel3.add(spacer1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel3.add(panel5, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel5.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Skala"));
        scaleSlider = new JSlider();
        scaleSlider.setMajorTickSpacing(10);
        scaleSlider.setMaximum(150);
        scaleSlider.setMinorTickSpacing(5);
        scaleSlider.setPaintLabels(false);
        scaleSlider.setPaintTicks(false);
        scaleSlider.setPaintTrack(true);
        scaleSlider.setSnapToTicks(false);
        panel5.add(scaleSlider, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(191, 16), null, 0, false));
        scaleLabel = new JLabel();
        scaleLabel.setText("50 %");
        panel5.add(scaleLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(50, -1), null, 0, false));
        progressBar = new JProgressBar();
        progressBar.setIndeterminate(false);
        progressBar.setStringPainted(false);
        progressBar.setValue(0);
        mainPanel.add(progressBar, BorderLayout.SOUTH);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        previewPanel = new ImagePanel(null);
    }

}
